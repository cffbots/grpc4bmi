# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python setup.py install
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.14.6'
    - name: OS dependencies
      run: sudo apt install uuid-dev
    - name: Setup Singularity
      uses: eWaterCycle/setup-singularity@v2
      with:
        singularity-version: 3.5.3
    - name: Pull Docker image
      run: docker pull ewatercycle/walrus-grpc4bmi:v0.3.1
    - name: Cache Singularity image
      id: cache-singularity-image
      uses: actions/cache@v2
      with:
        path: ~/.singularity
        key: singularity-image
    - name: Pull Singularity image
      if: steps.cache-singularity-image.outputs.cache-hit != 'true'
      run: singularity pull docker://ewatercycle/walrus-grpc4bmi:v0.3.1
    - name: Test with pytest
      run: pytest --cov=grpc4bmi --cov-report xml
    - name: SonarCloud analysis
      uses: sonarsource/sonarcloud-github-action@v1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install grpc
        uses: ewatercycle/setup-grpc@master
        with:
          grpc-version: 1.27.2
      - name: Debug
        run: |
          which protoc
          protoc --version
          echo $GRPC_ROOT
          ls -lR $GRPC_ROOT
          echo $LD_LIBRARY_PATH
          echo $CMAKE_PREFIX_PATH
          echo $PATH
          grep GRPC CMakeCache.txt
          export
      - name: Build dir
        run: mkdir -p cpp/build
      - name: configure
        run: cmake ..
        working-directory: cpp/build
      - name: make
        run: make VERBOSE=1
        working-directory: cpp/build
      - name: ctest
        run: ctest -V
        working-directory: cpp/build
